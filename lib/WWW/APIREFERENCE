= Desired API design

== Round 1 Operation Types

Operations on a tree, manage itself and subnodes with CRUD type methods
  create - Create a node
    new - create this node
    build - node already on phanfare
    add - node not yet on phanfare, upload immediately or store as temp
  read - List available nodes
    get - list attributes for this node
    list - nodes already on phanfare
    pending - nodes not yet on phanfare
  update - Change attributes
    set - set attributes for this node
    ... - nodes on phanfare
    ... - nodes not on phanfare
  delete - remove node
    ... - delete this node
    remove - remove from phanfare
    cancel - remove from extranode

== Round 2 Operation Types

=== Node

  name - name of object
  id - id of object
  uid - uid of object
  parent - parent object
  attribute - all attribute objects

=== List

  list - subnode objects
  names - names of subnodes, id appended on duplicates
  get - a subnode object by name or id
  AUTOLOAD - get
  childclass - class of subnodes
  create - add new subnode

=== Attribute

  get - get a value
  set - set a value

== Examples

# Agent
$api = WWW::Phanfare::Class->new();

# Account
$account = $api->account;

# Sites
@sites = $account->list;
@names = $account->names;
$site = $account->get('sitename');
$site = $account->sitename; # AUTOLOAD get
$site->attribute('key' => $value);
$value = $site->attribute('key');
$name = $site->name;
$account = $site->parent;
'Year' = $site->childclass;
$uid = $site->uid; # = $api->session->uid;
$gid = $site->gid; # = $api->session->gid;

# Year
@years = $site->list;
@names = $site->names;
$year = $site->get('yearname');
$year = $site->yearname; # AUTOLOAD get
$year = $site->create('yearname');
$name = $year->name;
$site = $year->parent;
'Album' = $year->childclass;
$uid = $site->uid; # $self->parent->uid;
$gid = $site->gid; # $self->parent->gid;

# Album
@albums = $year->list;
@names = $year->names;
$album = $year->get('albumname');
$album = $year->albumname; # AUTOLOAD get
$album = $year->create(albumname');
$name = $album->name;
$id = $album->id;
$year = $album->parent;
'Section' = $album->childclass;
uid...
gid...

# Section
# Rendition
# Image

# Attribute
@attributes = $node->attribute->list;
@names = $node->attribute->names;
$attribute = $node->attribute->get('key');
$attribute = $node->attribute->key; # AUTOLOAD get
$attribute = $node->attribute->key($value); # AUTOLOAD set
$attribute->set($value);
$value = $node->attribute->key->value;
$value = $attribute->value;
